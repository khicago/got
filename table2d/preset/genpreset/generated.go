// col reader of TheTestClass, generated by github.com/khicago/got/table2d/preset/cmd
package main

import (
	"github.com/khicago/got/table2d/preset"
	"github.com/khicago/got/table2d/preset/pcol"
)

type TheTestClass struct {
	ch *pcol.ColHeader
}

func NewTheTestClass(ch *pcol.ColHeader) *TheTestClass {
	return &TheTestClass{ch: ch}
}

func (p *TheTestClass) PHeader() *pcol.ColHeader {
	return p.ch
}

// ============= Meta block =============

// MetaOfLvUp returns ColMeta of LvUp
func (p *TheTestClass) MetaOfLvUp() *pcol.ColMeta {
	return p.ch.Get(1)
}

// MetaOfMagic returns ColMeta of Magic
func (p *TheTestClass) MetaOfMagic() *pcol.ColMeta {
	return p.ch.Get(3)
}

// MetaOfPid returns ColMeta of Pid
func (p *TheTestClass) MetaOfPid() *pcol.ColMeta {
	return p.ch.Get(0)
}

// MetaOfPower returns ColMeta of Power
func (p *TheTestClass) MetaOfPower() *pcol.ColMeta {
	return p.ch.Get(2)
}

// ============= Reader block =============

// LvUp reads the value of LvUp
func (p *TheTestClass) LvUp(prop preset.IProp) (int64, error) {
	seal := prop.Get(1)
	return seal.ID()
}

// Magic reads the value of Magic
func (p *TheTestClass) Magic(prop preset.IProp) (float64, error) {
	seal := prop.Get(3)
	return seal.Float()
}

// Pid reads the value of Pid
func (p *TheTestClass) Pid(prop preset.IProp) (int64, error) {
	seal := prop.Get(0)
	return seal.PID()
}

// Power reads the value of Power
func (p *TheTestClass) Power(prop preset.IProp) (int, error) {
	seal := prop.Get(2)
	return seal.Int()
}
